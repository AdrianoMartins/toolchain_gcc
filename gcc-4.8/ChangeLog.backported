http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=201615
2013-08-09  Dehao Chen  <dehao@google.com>

    Refactor the AutoFDO implementation.
    * Use new profile format (tree based).
    * Rewrite autofdo-profile.c using C++.
    * Remove dependencies in other modules.

    The new profile format has the following benefits:
    * More space efficient: profile size is usually 30%~40% as the original format.
    * Make iterative indirect call promotion possible.
    * Does not depend on file name any more. (more tolerant to source change)

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=201022
2013-07-18  Dehao Chen  <dehao@google.com>

    * gcc/auto-profile.c
    (read_profile): Fix the warning treated as error during bootstrapping.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=201021
2013-07-18  Dehao Chen  <dehao@google.com>

    * gcc/auto-profile.c
    (read_profile): Disable version number check for AutoFDO for now.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=201016
2013-07-17  Dehao Chen  <dehao@google.com>
    
    * gcc/auto-profile.c (get_inline_stack_size_by_edge): Remove.
    (get_inline_stack_by_edge): Remove.
    (get_callsite_count): Use alternate function.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=199593
2013-06-02  Dehao Chen  <dehao@google.com>
    
    * gcc/auto-profile.c (afdo_stack_eq): Fix incorrect hash_eq function.
    (process_auto_profile): Fix uninitialized memory error.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=199268
2013-05-23  Dehao Chen  <dehao@google.com>
    
    * gcc/profile.h (add_working_set): New Function.
    * gcc/regs.h (REG_FREQ_FROM_BB): New Function.
    * gcc/common.opt (fauto-profile): New option.
    * gcc/testsuite/gcc.dg/record-compilation-info-in-elf-1.c: New Test.
    * gcc/gcov-io.h (GCOV_TAG_AFDO_FILE_NAMES): New Macro.
    (GCOV_TAG_AFDO_FUNCTION): New Macro.
    (GCOV_TAG_AFDO_MODULE_GROUPING): New Macro.
    (GCOV_TAG_AFDO_WORKING_SET): New Macro.
    * gcc/cfg-flags.def (DEF_BASIC_BLOCK_FLAG): New Flag.
    (DEF_EDGE_FLAG): New FLag.
    * gcc/auto-profile.c: New File.
    * gcc/auto-profile.h: New File.
    * gcc/cgraphbuild.c (add_fake_indirect_call_edges): AutoFDO support.
    (build_cgraph_edges): Likewise.
    * gcc/opts.c (common_handle_option): Likewise.
    * gcc/opts.h (set_struct_debug_option): Likewise.
    * gcc/tree-cfg.c (gimple_merge_blocks): Likewise.
    * gcc/cgraphclones.c (cgraph_clone_node): Likewise.
    (clone_function_name): Likewise.
    * gcc/value-prof.c (gimple_ic_transform): Likewise.
    (gimple_alloc_histogram_value): Likewise.
    (cgraph_init_gid_map): Likewise.
    (find_func_by_global_id): Likewise.
    (gimple_ic_transform_mult_targ): Likewise.
    * gcc/value-prof.h (gimple_alloc_histogram_value): Likewise.
    * gcc/tree-pass.h (pass_ipa_auto_profile): Likewise.
    * gcc/passes.c (init_optimization_passes): Likewise.
    * gcc/cgraphunit.c (finalize_compilation_unit): Likewise.
    * gcc/tree-ssa-live.c (remove_unused_scope_block_p): Likewise.
    * gcc/ipa-inline.c (want_early_inline_function_p): Likewise.
    (edge_hot_enough_p): Likewise.
    * gcc/c-family/c-opts.c (c_common_parse_file): Likewise.
    * gcc/loop-unroll.c (decide_unroll_runtime_iterations): Likewise.
    * gcc/dwarf2out.c (auto_profile_debug_hooks): Likewise.
    * gcc/timevar.def (TV_IPA_AUTOFDO): Likewise.
    * gcc/ira-int.h (REG_FREQ_FROM_EDGE_FREQ): Likewise.
    * gcc/toplev.c (compile_file): Likewise.
    (process_options): Likewise.
    (do_compile): Likewise.
    * gcc/tree-profile.c (direct_call_profiling): Likewise.
    (gate_tree_profile_ipa): Likewise.
    * gcc/tree-inline.c (copy_edges_for_bb): Likewise.
    * gcc/predict.c (compute_function_frequency): Likewise.
    (rebuild_frequencies): Likewise.
    * gcc/debug.h (auto_profile_debug_hooks): Likewise
    * gcc/coverage.c (has_incompatible_cg_opts): Likewise.
    (incompatible_cl_args): Likewise.
    (coverage_init): Likewise.
    (coverage_has_asm_stmt): Likewise.
    (write_compilation_info_to_asm): Likewise.
    * gcc/coverage.h (find_func_by_global_id): Likewise.
    (incompatible_cl_args): Likewise.
    * gcc/profile.c (branch_prob): Likewise.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=198332
2013-04-26  Jakub Jelinek  <jakub@redhat.com>

    * Makefile.in (toplev.o): Depend on diagnostic-color.h.
    * diagnostic-color.c (should_colorize): Remove _WIN32 version.
    (colorize_init): Add argument to _WIN32 version.
    * toplev.c: Include diagnostic-color.h.
    (process_options): Default to -fdiagnostics-color=auto if
    GCC_COLORS env var is in the environment.
    * common.opt (fdiagnostics-color=): Add Var and Init.
    * doc/invoke.texi (-fdiagnostics-color=): Document that if
    GCC_COLORS env var is in the environment, the default is auto
    rather than never.

    * diagnostic.h (file_name_as_prefix): Add context argument.
    * diagnostic.c (file_name_as_prefix): Likewise.  Colorize
    the string as locus.
    * langhooks.c (lhd_print_error_function): Adjust caller.

http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=197841
http://gcc.gnu.org/viewcvs/gcc?view=rev&rev=197842
2013-04-12  Manuel López-Ibáñez  <manu@gcc.gnu.org>
            Jakub Jelinek  <jakub@redhat.com>

    * opts.c: Include diagnostic-color.h.
    (common_handle_option): Handle OPT_fdiagnostics_color_.
    * Makefile.in (OBJS-libcommon): Add diagnostic-color.o.
    (diagnostic.o, opts.o, pretty-print.o): Depend on diagnostic-color.h.
    (diagnostic-color.o): New.
    * common.opt (fdiagnostics-color, fdiagnostics-color=): New options.
    (diagnostic_color_rule): New enum.
    * dwarf2out.c (gen_producer_string): Don't print -fdiagnostics-color*.
    * langhooks.c (lhd_print_error_function): Add %r "locus" and %R around
    the location string.
    * diagnostic.def: Add 3rd argument to DEFINE_DIAGNOSTIC_KIND macros,
    either NULL, or color kind.
    * diagnostic-color.c: New file.
    * diagnostic-color.h: New file.
    * diagnostic-core.h (DEFINE_DIAGNOSTIC_KIND): Adjust macro for 3
    arguments.
    * doc/invoke.texi (-fdiagnostics-color): Document.
    * pretty-print.h (pp_show_color): Define.
    (struct pretty_print_info): Add show_color field.
    * diagnostic.c: Include diagnostic-color.h.
    (diagnostic_build_prefix): Adjust for 3 argument DEFINE_DIAGNOSTIC_KIND
    macros.  Colorize error:, warning: etc. strings and also the location
    string.
    (diagnostic_show_locus): Colorize the caret line.
    * pretty-print.c: Include diagnostic-color.h.
    (pp_base_format): Handle %r and %R format specifiers.  Colorize strings
    inside of %< %> quotes or quoted through q format modifier.

http://gcc.gnu.org/viewcvs?root=gcc&view=rev&rev=191571
2012-09-17  Jakub Jelinek  <jakub@redhat.com>

    PR tree-optimization/54563
    * tree-ssa-math-opts.c (execute_cse_sincos): Call
    gimple_purge_dead_eh_edges if last call has been changed.

    * g++.dg/torture/pr54563.C: New test.

http://gcc.gnu.org/viewcvs?view=revision&revision=193554
2012-11-16  Jakub Jelinek  <jakub@redhat.com>
    PR target/54073
    * config/i386/i386.md (mov<mode>cc): Use comparison_operator
    instead of ordered_comparison_operator resp.
    ix86_fp_comparison_operator predicates.
    * config/i386/i386.c (ix86_expand_fp_movcc): Reject TImode
    or for -m32 DImode comparisons.

http://gcc.gnu.org/viewcvs?view=revision&revision=193825
2012-11-26  Diego Novillo  <dnovillo@google.com>

    * gimplify.c: Work around for PR 55245.

http://gcc.gnu.org/viewcvs?view=revision&revision=186451
2012-04-14  Tom de Vries  <tom@codesourcery.com>
    * cfgcleanup.c (try_optimize_cfg): Replace call to delete_insn_chain by
    call to delete_insn.  Remove code to reorder BASIC_BLOCK note and
    DELETED_LABEL note, and move it to ...
    * cfgrtl.c (delete_insn): ... here.  Change return type to void.
    (delete_insn_and_edges): Likewise.
    (delete_insn_chain): Handle new return type of delete_insn.  Delete
    chain backwards rather than forwards.
    * rtl.h (delete_insn, delete_insn_and_edges): Change return type to
    void.
    * cfglayout.c (fixup_reorder_chain): Delete unused label.

2013-01-03  Jason Merrill  <jason@redhat.com>
    PR c++/55856
    * semantics.c (build_data_member_initialization): Handle DECL_EXPR.
